{"version":3,"sources":["components/container-right/styles.js","components/information-content/styles.js","components/information-content/index.js","components/container-right/index.js","components/container-about/styles.js","components/container-about/index.js","components/menu/styles.js","components/menu/index.js","page/styles.js","hooks/data.js","page/index.js","themes/index.js","App.js","serviceWorker.js","index.js"],"names":["ContainerLefStrip","styled","div","props","theme","color","purple","ContainerImage","Image","img","ContainerInfoUser","Container","ContianerPower","Progress","ProgressFill","value","ContainerInformationUser","centerTitle","index","children","title","icon","center","nameUser","avatar","email","phone","name","src","ContainerText","ContainerTitle","Title","h2","white","Line","hr","pink","ContainerCards","Card","CardSubTilte","TitleName","SubTitle","h3","TextDescription","p","grayText","Button1","button","activeButton","grayDisabled","Button2","TextButton","ContentButtons","ImageBackground","CardImage","About","useState","setActivButton","onClick","purpleMenu","ImageProfile","ContainerButtons","ButtonMenu","overMenu","Menu","setSection","section","h1","UserGetData","myData","setData","useEffect","fetch","then","response","json","data","Page","length","size","duration","xs","App","className","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e7635401.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const ContainerLefStrip = styled.div`\r\n  background-color: ${props => props.theme.color.purple};\r\n`;  \r\n\r\nexport const ContainerImage = styled.div`\r\n  margin-left: 20%;\r\n  width: 62%;\r\n  background-color: green;\r\n  border-radius: 50%;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  height: 100%;\r\n  width: 100%;\r\n`;\r\n\r\nexport const ContainerInfoUser = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  padding: 0px 36px 0 36px;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  align-items:center;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const ContianerPower =  styled.div`\r\n  display: flex;\r\n  align-items:center;\r\n  margin: 10px;\r\n  width:100%;\r\n  height: 10px;\r\n`;\r\n\r\nexport const Progress =  styled.div`\r\n  width: 100%;\r\n  height: 10px;\r\n  position: relative;\r\n  background-color: yellow;\r\n  margin: 10px;\r\n`;\r\n\r\nexport const ProgressFill = styled.div`\r\n  position: absolute;\r\n  width: 10px;\r\n  height: 20px;\r\n  background-color: red;\r\n  top: -4px;\r\n  left: ${props => props.value ? props.value : '0%' };\r\n`;","/* eslint-disable import/prefer-default-export */\nimport styled from 'styled-components';\n\nexport const ContainerInformationUser = styled.div`\n  display: flex;\n  flex-direction: row;\n  height: ${props => props.centerTitle ? `8%` : `50%`};\n  width: 100%;\n  background-color: #30383a;\n  justify-content: ${props => props.centerTitle ? `center` : `space-between`};\n`;","/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  ContainerInformationUser,\n} from './styles'\n\nfunction index(\n  {\n    children, \n    title,\n    icon,\n    center\n  },\n) {\n  return (\n    <>\n    <ContainerInformationUser centerTitle={center}>\n    <h4>{title}</h4>\n    {icon && (\n      <h4>{icon}</h4>\n    )}\n    </ContainerInformationUser>\n      {children}\n   </>\n  );\n}\n\nindex.propTypes = {\n  children: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  icon: PropTypes.string.isRequired, \n  center: PropTypes.number.isRequired,\n}\n\nexport default index;\n","/* eslint-disable react/jsx-filename-extension */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  ContainerLefStrip,\r\n  ContainerImage,\r\n  Image,\r\n  ContainerInfoUser,\r\n  ContianerPower,\r\n  Progress,\r\n  Container,\r\n  ProgressFill\r\n} from './styles';\r\nimport ContainerInformationUser from '../information-content';\r\n\r\nfunction index({nameUser, avatar, email, phone}) {\r\n  const name = nameUser;\r\n  return (\r\n    <ContainerLefStrip>\r\n      <ContainerImage>\r\n        <Image src={avatar} />\r\n      </ContainerImage>\r\n        <ContainerInformationUser title='Info' center>\r\n          <ContainerInfoUser>\r\n            <p>{name}</p>\r\n            <p>EEEEEE</p>\r\n          </ContainerInfoUser>\r\n          <ContainerInfoUser>\r\n            <p>{email}</p>\r\n            <p>EEEEEE</p>\r\n          </ContainerInfoUser>\r\n          <ContainerInfoUser>\r\n            <p>{phone}</p>\r\n            <p>EEEEEE</p>\r\n          </ContainerInfoUser>\r\n        </ContainerInformationUser>\r\n        <ContainerInformationUser title='Power Charge' center>\r\n          <Container>\r\n          <ContianerPower>\r\n              <p>\r\n               JS\r\n              </p>\r\n              <Progress>\r\n                <ProgressFill value=\"5%\"/>\r\n              </Progress>\r\n            </ContianerPower>\r\n            <ContianerPower>\r\n              JS <Progress>\r\n                <ProgressFill value=\"20%\"/>\r\n              </Progress>\r\n            </ContianerPower>\r\n            <ContianerPower>\r\n              JS <Progress>\r\n                <ProgressFill value=\"50%\" />\r\n              </Progress>\r\n            </ContianerPower>\r\n          </Container>\r\n  \r\n        </ContainerInformationUser>\r\n        <ContainerInformationUser title='Redes Sociales' center>\r\n          <p>Edison</p>\r\n        </ContainerInformationUser>\r\n    </ContainerLefStrip>\r\n  );\r\n}\r\n\r\nindex.propTypes = {\r\n  nameUser: PropTypes.string.isRequired,\r\n  avatar: PropTypes.string.isRequired,\r\n  email: PropTypes.string.isRequired, \r\n  phone: PropTypes.number.isRequired,\r\n}\r\n\r\nexport default index;\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  background-color: ${props => props.theme.color.purple};\r\n`;  \r\n\r\nexport const ContainerText = styled.div``; \r\n\r\nexport const ContainerImage = styled.div``; \r\n\r\nexport const ContainerTitle = styled.div`\r\n  padding: 3%;\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n  font-size: 20px;\r\n  color: ${props => props.theme.color.white};\r\n  width: 100%;\r\n  height: 2px;\r\n`\r\nexport const Line = styled.hr`\r\n  background-color: ${props => props.theme.color.pink};\r\n  height: 1px;\r\n  width: 8%;\r\n  border: 0;\r\n  float: left;\r\n`;\r\n\r\nexport const ContainerCards = styled.div`\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  flex-direction: row ;\r\n`;\r\n\r\nexport const Card = styled.div`\r\n  padding: 20px;\r\n  text-align: left;\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  height: 20%;\r\n`;\r\n\r\nexport const CardSubTilte = styled.div`\r\n  padding: 0px 20px 0px 20px;\r\n  font-size: 30px;\r\n  text-align: left;\r\n  width: 77%;\r\n`;\r\n\r\nexport const TitleName = styled.h2`\r\n  font-size: 55px;\r\n  color: ${props => props.theme.color.white};\r\n  width: 100%;\r\n  font-weight: bold;\r\n  margin: 0;\r\n  height: 60px;\r\n`;\r\n\r\nexport const SubTitle = styled.h3`\r\n  font-size: 20px;\r\n  color: ${props => props.theme.color.pink};\r\n  height: 14%;\r\n  width: 100%;\r\n`\r\n\r\nexport const TextDescription = styled.p`\r\n  font-size: 20px;\r\n  color: ${props => props.theme.color.grayText};\r\n  width: 82%;\r\n`;\r\n\r\nexport const Button1 = styled.button`\r\n  width: 44%;\r\n  background-color: ${props => props.activeButton === 1 ? props.theme.color.pink : props.theme.color.grayDisabled};\r\n  border: none;\r\n  outline: none;\r\n`;\r\n\r\nexport const Button2 = styled.button`\r\n  width: 44%;\r\n  background-color: ${props => props.activeButton === 2 ? props.theme.color.pink : props.theme.color.grayDisabled};\r\n  border: none;\r\n  margin-left: 20%;\r\n  outline: none;\r\n`;\r\n\r\nexport const TextButton = styled.p`\r\n  font-size: 100%;\r\n  color: ${props => props.theme.color.white};\r\n`\r\nexport const ContentButtons = styled.div`\r\n  display: flex;\r\n  justify-content: initial;\r\n  width: 60%;\r\n`;\r\n\r\nexport const ImageBackground = styled.img`\r\n  width: 420px;\r\n  height: 420px;\r\n`;\r\n\r\nexport const CardImage = styled.div`\r\n  padding: 20px;\r\n  text-align: left;\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n`;","/* eslint-disable react/jsx-filename-extension */\r\nimport React, { useState } from 'react';\r\nimport {\r\n  Container,\r\n  ContainerTitle,\r\n  Title,\r\n  Line,\r\n  ContainerCards,\r\n  Card,\r\n  TitleName,\r\n  SubTitle,\r\n  CardSubTilte,\r\n  TextDescription,\r\n  Button1,\r\n  Button2,\r\n  TextButton,\r\n  ContentButtons,\r\n  ContainerText,\r\n  ContainerImage,\r\n  ImageBackground,\r\n  CardImage,\r\n} from './styles';\r\n\r\nfunction About() {\r\n  const [activeButton, setActivButton] = useState(1);\r\n  return (\r\n    <Container>\r\n      <ContainerTitle>\r\n        <Title>\r\n          About\r\n        </Title>\r\n        <Line />\r\n      </ContainerTitle>\r\n      <ContainerCards>\r\n        <ContainerText>\r\n          <Card>\r\n            <TitleName>\r\n              vijay verma.\r\n            </TitleName>\r\n            <SubTitle>\r\n              Freelance Product Designer\r\n            </SubTitle>\r\n          </Card>\r\n          <CardSubTilte>\r\n            <TextDescription>\r\n              Currently curating designs for new startups and  founders. also love \r\n              to code in Laravel  and Ruby\r\n            </TextDescription>\r\n          </CardSubTilte>\r\n          <Card>\r\n            <ContentButtons>\r\n                <Button1 activeButton={activeButton} onClick={() => setActivButton(1)}>\r\n                  <TextButton>\r\n                    Hire me\r\n                  </TextButton>\r\n                </Button1>\r\n                <Button2 activeButton={activeButton} onClick={() => setActivButton(2)}>\r\n                <TextButton>\r\n                  Know more\r\n                </TextButton>\r\n                </Button2>\r\n            </ContentButtons>\r\n          </Card>\r\n        </ContainerText>\r\n        <ContainerImage>\r\n          <CardImage>\r\n            <ImageBackground  src=\"https://pngimage.net/wp-content/uploads/2018/05/empresario-png-3.png\" />\r\n          </CardImage>\r\n        </ContainerImage>\r\n      </ContainerCards>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  background-color: ${props => props.theme.color.purpleMenu};\n  width: 82%;\n`;\n\nexport const ContainerImage = styled.div`\n  padding: 15%;\n  text-align: center;\n`;\n\nexport const ImageProfile = styled.img`\n  border-radius: 50%;\n  height: 120px;\n`;\n\nexport const ContainerButtons = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\n\nexport const ButtonMenu = styled.button`\n  background-color: transparent;\n  border: none;\n  outline: none;\n  font-size: 18px;\n  text-align: left;\n  padding: 8%;\n  color: ${props => props.activeButton ? props.theme.color.pink : props.theme.color.white};\n  border-left-style:${props => props.activeButton && 'solid'};\n  border-left-color: ${props => props.activeButton && props.theme.color.pink};\n  :active {\n    background-color: ${props => props.theme.color.overMenu};\n  }\n`;","/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable react/button-has-type */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Container,\n  ContainerImage,\n  ImageProfile,\n  ContainerButtons,\n  ButtonMenu\n} from './styles';\n\nfunction Menu({setSection, section}) {\n  return (\n    <Container>\n    <ContainerImage>\n      <ImageProfile src=\"https://avatars3.githubusercontent.com/u/31748119?s=460&u=5b533fd135904b8b25951011a0c3da20fe15b413&v=4\" />\n    </ContainerImage>\n    <ContainerButtons>\n      <ButtonMenu activeButton={section === ''} onClick={() => setSection('')}>\n        About\n      </ ButtonMenu>\n      <ButtonMenu activeButton={section === 'about'}  onClick={() => setSection('about')}>\n        Work\n      </ButtonMenu>\n      <ButtonMenu activeButton={section === 'info'}  onClick={() => setSection('info')}>\n        Labs\n      </ButtonMenu>\n      <ButtonMenu activeButton={section === 'contact'}  onClick={() => setSection('contact')}>\n        Contact\n      </ButtonMenu>\n    </ContainerButtons>\n  </Container>\n  );\n}\n\nMenu.propTypes = {\n  section: PropTypes.string.isRequired,\n  setSection: PropTypes.func.isRequired,\n}\n\nexport default Menu;\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column; \r\n  padding: 5%;\r\n  background-color: red;\r\n`;\r\nexport const ContinerTitle = styled.div`\r\n  background-color: #30383a;\r\n  padding: 20px;\r\n  margin-top: 3%;\r\n`;\r\n\r\nexport const TitleName = styled.h1`\r\n  text-align: right;\r\n  color: white;\r\n`;\r\n\r\nexport const ContinerInformation = styled.div`\r\n  width: 56%;\r\n  background-color: white;\r\n  padding: 20px;\r\n  top: 0;\r\n  left: 0;\r\n  right: 68%;\r\n  margin: 0px 0px 0px 35%;\r\n`;\r\n\r\nexport const ContainerText = styled.p``;\r\n\r\nexport const ContainerInformation = styled.div`\r\n  padding: 2% 3% 0 2%;\r\n`;","import  { useState, useEffect } from 'react';\n\nconst apiUrl = 'https://raw.githubusercontent.com/edisonAlbaSarmiento/Landing-Resume-Design/master/data-curriculum-vitae/data.json';\n\nconst UserGetData =  () => {\n    const [myData, setData] = useState([]);\n\n    useEffect(() => {\n        fetch(apiUrl)\n        .then(response => response.json())\n        .then(data => setData(data))\n    }, [])\n\n    return myData;\n}\n\nexport default UserGetData;","/* eslint-disable jsx-a11y/click-events-have-key-events */\r\n/* eslint-disable react/button-has-type */\r\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\r\n/* eslint-disable react/jsx-filename-extension */\r\nimport React, { useState } from 'react';\r\nimport { Pulsate } from 'styled-loaders-react'\r\nimport { Grid, Row, Col } from 'react-flexbox-grid';\r\nimport {\r\n  ContainerRight, \r\n  ContainerAbout,\r\n  Menu\r\n} from '../components/index';\r\n\r\nimport {\r\n  // Container,\r\n  // ContinerTitle,\r\n  // TitleName,\r\n  // ContinerInformation,\r\n  // ContainerText,\r\n  // ContainerInformation\r\n} from './styles'\r\n// import ContainerInformationUser from '../components/information-content';\r\n\r\n\r\n// Hooks\r\nimport UserGetData from '../hooks/data';\r\n\r\nfunction Page() {\r\n  const myData = UserGetData();\r\n  const [section, setSection] = useState('');\r\n\r\n  return myData.length === 0 ? <Pulsate color=\"red\" size=\"100px\" duration=\"5s\" /> :(\r\n    <Grid>\r\n     <Row>\r\n      <Col xs={3} >\r\n        <Menu section={section}  setSection={setSection}/>\r\n      </Col>\r\n      {section === '' &&(\r\n        <Col xs={9} >\r\n          <ContainerAbout />\r\n        </Col>\r\n      )}\r\n      {section === 'about' &&(\r\n        <Col xs={9} >\r\n          <ContainerRight />\r\n\r\n        </Col>\r\n      )}\r\n      {section === 'info' &&(\r\n        <Col xs={9} >\r\n        Hola informacion\r\n        </Col>\r\n      )}\r\n      {section === 'contact' &&(\r\n        <Col xs={9} >\r\n        Hola contactenos\r\n        </Col>\r\n      )}\r\n      </Row>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Page;\r\n","const theme = {\n  color: {\n    purple: '#231d2e',\n    white: 'white',\n    pink: '#ff67b6',\n    grayDisabled: '#262138',\n    grayText: '#8e8d94',\n    purpleMenu: '#281b36',\n    overMenu: '#281835',\n  }\n}\n\nexport default theme;","/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport Page from './page';\n\n// Imports: Themes\nimport theme from './themes';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ThemeProvider theme={theme}>\n       <Page/>\n      </ThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","/* eslint-disable no-param-reassign */\n/* eslint-disable no-console */\n/* eslint-disable no-use-before-define */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\nlet process;\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './App.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}